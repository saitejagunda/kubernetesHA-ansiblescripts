---
  - hosts : kubevirt-mas1
    become : yes
    tasks:
            # - name: change directory
            # shell:
            # args:    
            # chdir:  /home/ubuntu
               # path: /home/ubuntu
         # state: directory

     - name: create new config file
       shell:
         cmd : |
                 cat <<EOF >/home/ubuntu/kubeadm-config.yaml
                 apiVersion: kubeadm.k8s.io/v1beta1
                 kind: ClusterConfiguration
                 kubernetesVersion: stable
                 apiServer:
                         certSANs:
                         - "10.26.37.140"
                
                 controlPlaneEndpoint: "10.26.37.140:6443"
                 etcd:
                      external:
                         endpoints:
                         - https://10.26.37.141:2379    
                         - https://10.26.37.173:2379   
                         - https://10.26.37.185:2379   
                         caFile: /etc/kubernetes/pki/etcd/ca.crt
                         certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
                         keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
    
     - name: change permission to executable for all
       file:
         path: /home/ubuntu/kubeadm-config.yaml
         state: file
         mode: '0775'

     - name: make directory for copying file from etcd to master
       file: 
         path: /etc/kubernetes/pki/etcd/
         state: directory
         recurse: yes
    
         # - name: Copy the file from etcd-1 to master using Method Pull
         # synchronize:
         # src : /root/ca.crt
         # dest: /etc/kubernetes/pki/etcd/
         # mode: pull
         # recursive: yes
         # checksum: yes
         # delegate_to: master1

  
     - name: copy file from etcd to above directory
       command: cp /root/ca.crt /etc/kubernetes/pki/etcd/
     
     - name: copy file from etcd to above directory
       command: cp /root/apiserver-etcd-client.crt /etc/kubernetes/pki/
     
     - name: copy file from etcd to above directory
       command: cp /root/apiserver-etcd-client.key /etc/kubernetes/pki/
     
     - name: RUN FIRST NODE
       command: kubeadm init --config /home/ubuntu/kubeadm-config.yaml
       # ignore_errors: True

       # - name: set -e
       # command: set -e

     - name: make directory for .kube
       file: 
        path: /root/.kube
        state: directory
     
     - name: copy file 
       command: cp /etc/kubernetes/admin.conf   /root/.kube/config
    
       #  - name: change group
       # command: sudo chown $(id -u):$(id -g) home/.kube/config

     - name: declaring variable
       shell:
         cmd: |
                 IP = `ip route get 8.8.8.8 | awk -F "src " 'NR==1{split($2,a," ");print a[1]}'`
  
                 IPCLUSTER=$IP:6443;echo "kubeadm join --token $(kubeadm token list | sed '1d' | head -1| awk '{print $1}') $IPCLUSTER --discovery-token-ca-cert-hash sh                 a256:$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | awk '{print $2}'                 )" > /home/ubuntu/Join-token.sh

                 echo " ------------------ Installing the Weave CNI plugin ----------------"



     - name: sysctl bridge
       command: sysctl net.bridge.bridge-nf-call-iptables=1
     
     - name: kubectl apply
       shell:
         cmd: |
                 kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

     - name: copy content
       shell:
             |
              cat <<EOF > /home/ubuntu/temp.sh
              --control-plane

     - name: pasting
       shell:
             |
              kubeadm token create --print-join-command > /home/ubuntu/Join-token.sh

     - name: joining
       shell:
             |
              paste /home/ubuntu/Join-token.sh /home/ubuntu/temp.sh > /home/ubuntu/master-join-token.sh
          
               #     - name: kubectl apply
               #command: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
      
       # - name: check if master is running
       # command: kubectl --kubeconfig /etc/kubernetes/admin.conf get pod -n kube-system -w
       # - name: check if master running
       # command: kubectl --kubeconfig /etc/kubernetes/admin.conf get nodes  
        

